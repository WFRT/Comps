#SetOption('implicit_cache', 1)
Import('env')
Import('exeDir')
Import('debug')

libs    = ['netcdf', 'grib_api', 'jasper', 'boost_filesystem-mt', 'boost_system-mt', 'netcdf_c++', 'ncurses', 'gtest', 'm']
libpath = ['/usr/local/lib', '/usr/local/boost/lib', '/usr/lib/', '/usr/local/gtest-1.6.0/lib']
cpppath = ['src/', '/usr/local/include/', '/usr/local/boost/include', '/usr/include/', '/usr/local/gtest-1.6.0/include']

# Components
folders = Split('Inputs Correctors Selectors Downscalers DetMetrics Averagers Calibrators Configurations Continuous Discretes Finders BaseDistributions Estimators Metrics Outputs ParameterIos Variables Uncertainties Smoothers Interpolators Measures Loggers Qcs')
objs =[]
for folder in folders:
   obj = env.Object(Glob('src/' + folder + '/*.cpp'), CPPPATH=cpppath)
   objs = objs + [obj]

core = env.Object(Glob('src/*.cpp'), CPPPATH=cpppath)

compsDriver = env.Object(Glob('src/Drivers/Comps.cpp'), CPPPATH=cpppath)

comps      = [compsDriver] + objs + [core]
if(debug):
   programName = exeDir + '/comps_debug.exe'
else:
   programName = exeDir + '/comps.exe'
compsExe   = env.Program(programName, comps, LIBPATH=libpath, LIBS=libs)
